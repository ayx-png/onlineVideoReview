管理员创建会议
    1. 数据库创建会议条目（相当于一个app里的一个channel） 条目键值：appID，channel，token，adminID，members，membersNum
        创建会议成员表，条目键值：channel、memberID

    2. 前端页面 meetingCreate.html
        创建会议界面
            1. 创建按钮绑定点击事件
            2. 获取会议主题、人数、时长、麦克风和摄像头状态
            3. 检查会议时间是否为0
                若为0，在页面提醒并return
            4. 检查会议人数是否为0
                若人数 <=1，在页面提醒并return
            5. 手动绑定表单提交事件

    3. 后台实现
        思路：
            1. 接收客户端的请求（参数：会议主题、人数、时长、麦克风和摄像头状态）
            2. 参数合法性判断
                -如果参数不合法，
                    通过消息模型对象返回结果（设置状态、提示信息、回显数据）
                    将消息模型对象设置到request作用域中
                    请求跳转到登录页面,meetingCreate.html
                    return
            3. 判断会议是否存在
                -若存在
                    通过消息模型对象返回结果（设置状态、提示信息：会议已存在请加入会议、回显数据）
                    将消息模型对象设置到request作用域中
                    请求跳转到登录页面,meetingCreate.html
                    return
            4. 生成channel、token等参数，与客户端发送参数一同在数据库会议表单中添加条目
                创建数据库会议成员表，将管理员同时加入到表
            5. 会议创建成功，并重定向到会议界面meeting.html

        controller层 （接受数据、响应结果）
            1. 接收客户端的请求（参数：会议主题、人数、时长、麦克风和摄像头状态）
            2. 调用service层的方法，返回消息模型对象
            3. 判断消息模型状态码
                -如果状态码为失败
                    将消息模型对象将消息模型对象设置到request作用域中，请求跳转到登录页面,meetingCreate.jsp
                -如果状态码是成功
                    将消息模型中的用户信息设置到session作用域中，重定向到meeting.jsp页面
        service层（业务逻辑）
            1. 参数合法性判断
                -如果参数不合法
                    状态码、提示信息、回显数据设置到消息模型对象中，返回消息模型对象
            2. 调用dao（mapper）层的查询方法，通过channel查询会议对象
            3. 判断会议是否存在
                --若已经存在，状态码、提示信息、回显数据设置到消息模型对象中，返回消息模型对象
            4. 注册成功， 将成功状态、提示信息、用户对象设置消息模型对象
            5. 将会议数据存入数据库，会议成员存入数据库表，返回return
        mapper层 （Dao层）
            定义对应的接口